extend loggedin
block script
    script(type="text/javascript").
        function steadyState(points, temp, onPoint) {
            for(i = 0; i < points; ++i) {
                var calctemp = temp + (Math.random() / 4);
                onPoint(calctemp);
            }
        }
        function changing(points, startTemp, endTemp, direction, onPoint) {
            var diffPerPoint = (direction > 0) ? (endTemp-startTemp)/points : (startTemp/endTemp)/points;
            for(i = 0; i < points; ++i) {
                var temp = startTemp - ((direction * diffPerPoint) * i);
                onPoint(temp);
            }
        }
        function outputTemps(temps) {
            var xhr = new XMLHttpRequest();

            var params = "dev=true&date=" + temps[0].date.toISOString() + "&temperature=" + temps[0].temperature + "&device=" + temps[0].device;

            var http = new XMLHttpRequest();

            http.open("POST", "/api/temperature/add", true);

            http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

            http.onreadystatechange = function () {
                if (http.readyState == 4) {
                    temps.shift();
                    if(temps.length > 0) {
                        outputTemps(temps);
                    }
                }
            };

            http.send(params);
        }
        function addTodaysTemps() {

            var date = new Date();
            date.setDate(date.getDate() - 1);

            var points = 24 * 4;
            var numPeriods = 6;
            var pointsPerPeriod = points / numPeriods;
            var milliSecondsBetweenPoints = (24 * 60 * 60 * 1000) / points;

            var temps = [];

            steadyState(pointsPerPeriod, 16, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });
            changing(pointsPerPeriod, 16, 20, 1, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });
            changing(pointsPerPeriod, 20, 16, -1, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });
            steadyState(pointsPerPeriod, 16, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });
            changing(pointsPerPeriod, 16, 20, 1, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });
            steadyState(pointsPerPeriod, 20, function(temp) {
                temps.push({device:'TA',temperature:temp,date:date});
                date.setTime(date.getTime() + milliSecondsBetweenPoints);
            });

            outputTemps(temps);
        }
        function removeDevTemps() {
            var xhr = new XMLHttpRequest();

            var http = new XMLHttpRequest();
            http.open("DELETE", "/api/temperature/devTemps", true);

            http.send();
        }

block content
    div.alert.alert-warning(role='alert') <strong>Hmm, Jo...</strong><br>... are you sure you should be playing about in here?

    button.btn.btn-success(onclick="addTodaysTemps()") Generate some temperatures for today

    button.btn.btn-danger(onclick="removeDevTemps()") Remove TEST temperature data
